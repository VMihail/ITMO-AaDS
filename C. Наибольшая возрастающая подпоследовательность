import java.util.ArrayDeque;
import java.util.Scanner;

public class Main {

    private static final Scanner in = new Scanner(System.in);
    private static final int n = in.nextInt();
    private static final int[] a = new int[n];
    private static final int[] prev = new int[n];
    private static final int[] dp = new int[n];

    public static void main(String[] args) {
        solve();
    }

    private static void solve() {
        for (int i = 0; i < n; i++) {
            a[i] = Integer.parseInt(in.next());
        }

        for (int i = 0; i < n; i++) {
            prev[i] = -1;
            dp[i] = 1;
            for (int j = 0; j < i; j++) {
                if (a[i] > a[j] && dp[i] - 1 < dp[j]) {
                    prev[i] = j;
                    dp[i] = dp[j] + 1;
                }
            }
        }

        int last = 0, len = dp[0];
        for (int i = 0; i < n; i++) {
            if (len < dp[i]) {
                last = i;
                len = dp[i];
            }
        }

        ArrayDeque<Integer> subs = new ArrayDeque<>();

        while (last >= 0) {
            int i = a[last];
            subs.addLast(i);
            last = prev[last];
        }

        Subsequence result = new Subsequence(subs, len);
        System.out.println(result.len);

        while (!result.subs.isEmpty()) {
            System.out.print(result.subs.removeLast() + " ");
        }
    }
}

class Subsequence {
    public int len;
    public ArrayDeque<Integer> subs;

    Subsequence(ArrayDeque<Integer> subs, int len) {
        this.subs = subs;
        this.len = len;
    }
}
